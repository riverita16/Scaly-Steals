{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanyvuu/Documents/College/Semester4/CEN3031/Project/development/src/components/LoginPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [showInputs, setShowInputs] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [action, setAction] = useState('Login');\n  const handleLoginClick = () => {\n    setAction(\"Login\");\n    setShowInputs(true);\n  };\n  const handleCreateAccountClick = () => {\n    setAction(\"Create Account\");\n    setShowInputs(true);\n  };\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleLogin = () => {\n    const userData = {\n      username: username,\n      password: password\n    };\n    console.log(userData);\n    return JSON.stringify(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [!showInputs && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoginClick,\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateAccountClick,\n        className: \"create-account-button\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), showInputs && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: handleUsernameChange,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: handlePasswordChange,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"login-button\",\n        children: action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"CiQcHTMIZl99Ng28Hdw+wZ0iGs0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","showInputs","setShowInputs","username","setUsername","password","setPassword","action","setAction","handleLoginClick","handleCreateAccountClick","handleUsernameChange","e","target","value","handlePasswordChange","handleLogin","userData","console","log","JSON","stringify","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/tiffanyvuu/Documents/College/Semester4/CEN3031/Project/development/src/components/LoginPopup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../App.css'; // Assuming you have a CSS file for styling\n\nfunction Login() {\n  const [showInputs, setShowInputs] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [action, setAction] = useState('Login');\n\n  const handleLoginClick = () => {\n    setAction(\"Login\");\n    setShowInputs(true);\n  };\n\n  const handleCreateAccountClick = () => {\n    setAction(\"Create Account\");\n    setShowInputs(true);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = () => {\n    const userData = {\n      username: username,\n      password: password\n    };\n    console.log(userData);\n  \n    return JSON.stringify(userData);\n  };\n\n  return (\n    <div className=\"login-container\">\n      {!showInputs && (\n        <div className=\"button-container\">\n          <button onClick={handleLoginClick} className=\"login-button\">\n            Login\n          </button>\n          <button onClick={handleCreateAccountClick} className=\"create-account-button\">\n            Create Account\n          </button>\n        </div>\n      )}\n      {showInputs && (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={handleUsernameChange}\n            className=\"login-input\"\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={handlePasswordChange}\n            className=\"login-input\"\n          />\n          <button onClick={handleLogin} className=\"login-button\">\n            {action}\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}